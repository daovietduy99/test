name: Run Terraform Apply
on:
  workflow_dispatch:

jobs:
  terraform_apply:
    name: Terraform apply
    runs-on: ubuntu-latest
    env:
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      TF_VAR_tenant_id: ${{ secrets.TF_VAR_TENANT_ID }}
      TF_VAR_subscription_id: ${{ secrets.TF_VAR_SUBSCRIPTION_ID }}
      TF_VAR_client_id: ${{ secrets.TF_VAR_CLIENT_ID }}
      TF_VAR_client_secret: ${{ secrets.TF_VAR_CLIENT_SECRET }}
      TF_VAR_environment_short_name: ${{ vars.TF_VAR_ENVIRONMENT_SHORT_NAME }}
      TF_VAR_environment: ${{ vars.TF_VAR_ENVIRONMENT }}
      TF_VAR_location: ${{ vars.TF_VAR_LOCATION }}
      TF_VAR_location_short_name: ${{ vars.TF_VAR_LOCATION_SHORT_NAME }}
      TF_VAR_company_short_name: ${{ vars.TF_VAR_COMPANY_SHORT_NAME }}

      # steps:
      #   - name: Run azcli command
      #     run: 
      #       # Register the "DisableNetworkWatcherAutocreation" feature.
      #       az feature register --name 'DisableNetworkWatcherAutocreation' --namespace 'Microsoft.Network'
      #       # Register the "Microsoft.Network" resource provider.
      #       az provider register --name 'Microsoft.Network'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ~1.5.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        id: apply
        #if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          export TF_LOG=DEBUG
          terraform apply tfplan
        env:
          TF_CLI_AUTO_APPROVE: 1
        continue-on-error: true

      - name: Sleep for 10 minutes
        run: sleep 600
        if: steps.apply.outcome == 'success' && github.ref != 'refs/heads/main'

      - name: Terraform destroy
        id: destroy
        run: terraform destroy --auto-approve
        if: github.ref != 'refs/heads/main'
        # The following condition allow run destroy only when the apply failure 
        # if: steps.apply.outcome == 'failure'
